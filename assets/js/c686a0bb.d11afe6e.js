"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8132],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=s(r),g=a,m=u["".concat(p,".").concat(g)]||u[g]||c[g]||o;return r?n.createElement(m,l(l({ref:t},d),{},{components:r})):n.createElement(m,l({ref:t},d))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5238:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_label:"1768. Merge Strings Alternately",sidebar_position:1},l=void 0,i={unversionedId:"string/merge-strings-alternately",id:"string/merge-strings-alternately",title:"merge-strings-alternately",description:"\u9898\u76ee\u63cf\u8ff0",source:"@site/docs/02-string/merge-strings-alternately.md",sourceDirName:"02-string",slug:"/string/merge-strings-alternately",permalink:"/Leetcoding/docs/string/merge-strings-alternately",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02-string/merge-strings-alternately.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"1768. Merge Strings Alternately",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"String",permalink:"/Leetcoding/docs/category/string"},next:{title:"Sort",permalink:"/Leetcoding/docs/category/sort"}},p={},s=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:3},{value:"\u7b97\u6cd5",id:"\u7b97\u6cd5",level:3},{value:"\u601d\u8def",id:"\u601d\u8def",level:4},{value:"Java \u4ee3\u7801",id:"java-\u4ee3\u7801",level:4}],d={toc:s};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\u9898\u76ee\u63cf\u8ff0"},"\u9898\u76ee\u63cf\u8ff0"),(0,a.kt)("p",null,"You are given two strings $word1$ and $word2$. Merge the strings by adding letters in alternating order, starting with $word1$. If a string is longer than the other, append the additional letters onto the end of the merged string."),(0,a.kt)("p",null,"Return ",(0,a.kt)("em",{parentName:"p"},"the merged string.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: word1 = "abc", word2 = "pqr"\nOutput: "apbqcr"\nExplanation:\xa0The merged string will be merged as so:\nword1:  a   b   c\nword2:    p   q   r\nmerged: a p b q c r\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: word1 = "ab", word2 = "pqrs"\nOutput: "apbqrs"\nExplanation:\xa0Notice that as word2 is longer, "rs" is appended to the end.\nword1:  a   b \nword2:    p   q   r   s\nmerged: a p b q   r   s\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 3:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: word1 = "abcd", word2 = "pq"\nOutput: "apbqcd"\nExplanation:\xa0Notice that as word1 is longer, "cd" is appended to the end.\nword1:  a   b   c   d\nword2:    p   q \nmerged: a p b q c   d\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"$1 <= word1.length, word2.length <= 100$"),(0,a.kt)("li",{parentName:"ul"},"$word1$ and $word2$ consist of lowercase English letters.")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"\u7b97\u6cd5"},"\u7b97\u6cd5"),(0,a.kt)("h4",{id:"\u601d\u8def"},"\u601d\u8def"),(0,a.kt)("p",null,"\u4f7f\u7528\u53cc\u6307\u9488\u8fdb\u884c\u904d\u5386"),(0,a.kt)("h4",{id:"java-\u4ee3\u7801"},"Java \u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"class Solution {\n    public String mergeAlternately(String word1, String word2) {\n        int len1 = word1.length();\n        int len2 = word2.length();\n\n        int pos = 0;\n\n        StringBuilder builder = new StringBuilder();\n        while (pos < len1 && pos < len2) {\n            builder.append(word1.charAt(pos));\n            builder.append(word2.charAt(pos));\n            pos++;\n        }\n\n        if (pos >= len1) {\n            builder.append(word2, pos, len2);\n        } else {\n            builder.append(word1, pos, len1);\n        }\n\n        return builder.toString();\n    }\n}\n")))}c.isMDXComponent=!0}}]);